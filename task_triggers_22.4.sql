DROP TABLE  IF EXISTS READERS_AUD;
DROP TABLE  IF EXISTS BOOKS_AUD;
DROP TRIGGER IF EXISTS READERS_INSERT;
DROP TRIGGER IF EXISTS READERS_DELETE;
DROP TRIGGER IF EXISTS READERS_UPDATE;
DROP TRIGGER IF EXISTS BOOKS_INSERT;
DROP TRIGGER IF EXISTS BOOKS_DELETE;
DROP TRIGGER IF EXISTS BOOKS_UPDATE;

CREATE TABLE READERS_AUD (
	EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
	EVENT_DATE DATETIME NOT NULL,
	EVENT_TYPE VARCHAR(10) DEFAULT NULL,
	READER_ID INT(11) NOT NULL,
	OLD_FIRSTNAME VARCHAR(20),
	NEW_FIRSTNAME VARCHAR(20),
	OLD_LASTNAME VARCHAR(20),
	NEW_LASTNAME VARCHAR(20),
	OLD_PESELID VARCHAR(11),
	NEW_PESELID VARCHAR(11),
	OLD_VIP_LEVEL VARCHAR(40),
	NEW_VIP_LEVEL VARCHAR(40),
	PRIMARY KEY (`EVENT_ID`)
);

CREATE TABLE BOOKS_AUD (
	EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
	EVENT_DATE DATETIME NOT NULL,
	EVENT_TYPE VARCHAR(10) DEFAULT NULL,
	BOOK_ID INT(11),
	OLD_TITLE VARCHAR(20),
	NEW_TITLE VARCHAR(20),
	OLD_PUBYEAR INT(11),
	NEW_PUBYEAR INT(11),
	OLD_BESTSELLER_STATUS TINYINT(1),
	NEW_BESTSELLER_STATUS TINYINT(1),
	PRIMARY KEY (`EVENT_ID`)
);

#Readers Triggers

DELIMITER $$

CREATE TRIGGER READERS_INSERT AFTER INSERT ON READERS
FOR EACH ROW
BEGIN
	INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID, NEW_VIP_LEVEL)
		VALUES (CURTIME(), "INSERT", NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, NEW.VIP_LEVEL);
END$$

DELIMITER ;


DELIMITER $$

CREATE TRIGGER READERS_DELETE AFTER DELETE ON READERS
FOR EACH ROW
BEGIN
	INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID)
		VALUES (CURTIME(), "DELETE", OLD.READER_ID);
END$$

DELIMITER ;


DELIMITER $$

CREATE TRIGGER READERS_UPDATE AFTER UPDATE ON READERS
FOR EACH ROW
BEGIN
	INSERT INTO READERS_AUD  (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID, NEW_VIP_LEVEL, OLD_FIRSTNAME, OLD_LASTNAME, OLD_PESELID, OLD_VIP_LEVEL)
		VALUES (CURTIME(), "UPDATE", OLD.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, NEW.VIP_LEVEL, OLD.FIRSTNAME, OLD.LASTNAME, OLD.PESELID, OLD.VIP_LEVEL);
END$$

DELIMITER ;

#BOOKS TRIGGERS

DELIMITER $$

CREATE TRIGGER BOOKS_INSERT AFTER INSERT ON BOOKS
FOR EACH ROW
BEGIN
	INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR, NEW_BESTSELLER_STATUS)
		VALUES (CURTIME(), "INSERT", NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER);
END$$

DELIMITER ;


DELIMITER $$

CREATE TRIGGER BOOKS_DELETE AFTER DELETE ON BOOKS
FOR EACH ROW
BEGIN
	INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID)
		VALUES (CURTIME(), "DELETE", OLD.BOOK_ID);
END$$

DELIMITER ;


DELIMITER $$

CREATE TRIGGER BOOKS_UPDATE AFTER UPDATE ON BOOKS
FOR EACH ROW
BEGIN
	INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR, NEW_BESTSELLER_STATUS, OLD_TITLE, OLD_PUBYEAR, OLD_BESTSELLER_STATUS)
		VALUES (CURTIME(), "UPDATE", OLD.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER, OLD.TITLE, OLD.PUBYEAR, OLD.BESTSELLER);
END$$

DELIMITER ;


#TEST

INSERT INTO BOOKS(TITLE, PUBYEAR, BESTSELLER)
     VALUES ("TEST", 1995, 1);
     
INSERT INTO READERS(FIRSTNAME, LASTNAME, PESELID, VIP_LEVEL)
     VALUES ("John", "Smith", "83012217938", "GOLD");
     
DELETE FROM READERS 
	WHERE READER_ID = 4;

DELETE FROM BOOKS 
	WHERE BOOK_ID = 4;

UPDATE READERS SET FIRSTNAME  = "TEST"
	WHERE READER_ID = 5;
    
UPDATE BOOKS SET TITLE = "TEST"
	WHERE BOOK_ID = 1;
     
     
     
     
     
     
     